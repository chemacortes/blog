<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Hyperreals *R - Pensamientos</title><link href="https://blog.ch3m4.org/" rel="alternate"></link><link href="https://blog.ch3m4.org/feeds/pensamientos.atom.xml" rel="self"></link><id>https://blog.ch3m4.org/</id><updated>2018-07-25T20:41:54+02:00</updated><subtitle>Quarks, bits y otras criaturas infinitesimales</subtitle><entry><title>Reinicio 2018</title><link href="https://blog.ch3m4.org/2018/07/22/reinicio-2018/" rel="alternate"></link><published>2018-07-22T11:40:51+02:00</published><updated>2018-07-25T20:41:54+02:00</updated><author><name>Chema Cortés</name></author><id>tag:blog.ch3m4.org,2018-07-22:/2018/07/22/reinicio-2018/</id><summary type="html">&lt;p&gt;Después de mucho tiempo, vuelvo a escribir en este blog. No tenía mucho qué decir, pero es posible que haya llegado el momento de&amp;nbsp;hacerlo.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Hacía mucho que no escribía en este blog. La razón principal es que no tenía mucho que decir. Lo poco que podía contribuir lo he ido haciendo en otros ámbitos de internet y no había nada más que añadir con un mínimo&amp;nbsp;interés.&lt;/p&gt;
&lt;p&gt;En este tiempo, he seguido profundizando más en la programación funcional de la mano de &lt;a href="https://scala-lang.org"&gt;scala&lt;/a&gt; y &lt;a href="https://haskell.org"&gt;haskell&lt;/a&gt;, he mirado novedades en varios lenguajes (&lt;a href="https://python.org"&gt;python&lt;/a&gt;, &lt;a href="https://www.typescriptlang.org/"&gt;typescript&lt;/a&gt;,..) y he probado algunas de las tecnologías más populares en estos momentos (docker, angular, raspberry,&amp;nbsp;etc).&lt;/p&gt;
&lt;p&gt;Sin embargo, sigo notado que se programa desastrosamente para &lt;strong&gt;concurrencia&lt;/strong&gt;. Un programador, además de saber programar, debería ser capaz de razonar sobre las particularidades del entorno de ejecución que afectarán a su programa. De igual modo que es capaz de usar algoritmos para optimizar el uso de memoria y reducir el consumo de &lt;span class="caps"&gt;CPU&lt;/span&gt;, también debería ser capaz de sincronizar los distintos hilos de ejecución y saber cómo crear &lt;em&gt;&amp;#8220;transacciones atómicas&amp;#8221;&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Sobre todo, algo a tener claro en concurrencia es que &lt;strong&gt;&amp;#8220;&lt;span class="caps"&gt;NO&lt;/span&gt; &lt;span class="caps"&gt;EXISTE&lt;/span&gt; &lt;span class="caps"&gt;UNA&lt;/span&gt; SOLUCIÓN &lt;span class="caps"&gt;PARA&lt;/span&gt; &lt;span class="caps"&gt;TODO&lt;/span&gt;&amp;#8221;&lt;/strong&gt;. Cada caso tiene una solución distinta que requerirá de estudio previo y una solución acorde al problema. Y para eso hay que aprender a&amp;nbsp;razonar.&lt;/p&gt;
&lt;div class="admonition info"&gt;
&lt;p&gt;&lt;strong&gt;Si no entiendes el problema, el lenguaje no te dará la&amp;nbsp;solución&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Personalmente, sigo pensando que debería cambiarse la &lt;em&gt;Enseñanza Tradicional de la Programación&lt;/em&gt;. Cambiar lenguajes dinámicos y variables globales por lenguajes funcionales y sistemas de tipos. Aprender nuevos modos de hacer las&amp;nbsp;cosas.&lt;/p&gt;
&lt;p&gt;En&amp;nbsp;definitiva:&lt;/p&gt;
&lt;div class="admonition info"&gt;
&lt;p&gt;&lt;strong&gt;Más matemáticas y menos&amp;nbsp;ingeniera&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;</content><category term="concurrency"></category></entry><entry><title>Renacimiento</title><link href="https://blog.ch3m4.org/2016/01/10/renacimiento/" rel="alternate"></link><published>2016-01-10T15:51:06+01:00</published><updated>2016-01-10T15:51:06+01:00</updated><author><name>Chema Cortés</name></author><id>tag:blog.ch3m4.org,2016-01-10:/2016/01/10/renacimiento/</id><summary type="html">&lt;p&gt;Pensamientos de lo hecho estos años y qué espero del&amp;nbsp;futuro&lt;/p&gt;</summary><content type="html">&lt;p&gt;Si eres uno de los pocos seguidores de este blog, habrás notado que se migrado a un nuevo servidor y un nuevo &lt;em&gt;framework&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;He tenido el blog bastante abandonado. Podría decirse que no tenía nada interesante qué decir en este tiempo, pero la verdad es que  he preferido contar lo poco que tenía que contar a través de &lt;a href="https://twitter.com"&gt;twitter&lt;/a&gt; y otras vías&amp;nbsp;alternativas.&lt;/p&gt;
&lt;p&gt;Si esperas que continúe con los artículos de &lt;a href="http://python.org"&gt;Python&lt;/a&gt;, es posible que no lo haga. Últimamente, estoy bastante defraudado con los programadores que se acercan a este lenguaje. Puede que sea por haberse convertido en un lenguaje tan popular, algo que siempre es bueno. Pero echo mucho de menos el &lt;em&gt;&amp;#8220;modo pythónico&amp;#8221;&lt;/em&gt; que influía en todo lo que se hacía para este lenguaje en sus principios. Ahora parece como que haya que programar para que lo entiendan incluso los que no saben python. Se evitan usar compresiones de listas o expresiones generadoras porque son técnicas demasiado avanzadas, y las novedades que introduce python3 parece como que haya que evitarlas. Me parece &lt;em&gt;simplemente absurdo&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Creo que python es un lenguaje genial para &lt;em&gt;scripting&lt;/em&gt;, con ámbitos de aplicación que abarcan desde gestión de sistemas a aplicaciones científicas. &lt;em&gt;Un lenguaje para gobernarlos a todos&lt;/em&gt;. Pero necesita evolucionar, y necesita un mejor sistema de tipos. El &lt;em&gt;tipado gradual&lt;/em&gt; es imprescindible y debería ser aceptado por la comunidad de programadores python cuanto antes (tema que espero tratar en algún próximo&amp;nbsp;artículo).&lt;/p&gt;
&lt;p&gt;Sigo usando mucho python. De hecho, este blog está ahora creado con &lt;a href="http://getpelican.com/"&gt;pelican&lt;/a&gt;, un generador estático de páginas html. También me ayudo de varias herramientas python en tareas tales como el &lt;em&gt;push&lt;/em&gt; al repositorio de github donde alojo ahora el blog (posiblemente, también sea objeto de un nuevo artículo cómo lo hago). Por si fuera poco, también uso &lt;a href="https://wiki.gnome.org/Apps/Gedit/" title="Gnome Editor"&gt;gedit&lt;/a&gt; para editar el texto, donde estoy incorporado algunos &lt;em&gt;snippets&lt;/em&gt; en python para dar formato al texto &lt;em&gt;markdown&lt;/em&gt; (vale, tomo nota para otro&amp;nbsp;artículo).&lt;/p&gt;
&lt;p&gt;Este último año, creo que el lenguaje en el que más he programado ha sido &lt;a href="https://www.haskell.org/"&gt;haskell&lt;/a&gt;. Aunque ya muchos años, es en estos momentos cuando se está produciendo un autentico &lt;em&gt;&amp;#8220;Renacimento&amp;#8221;&lt;/em&gt; de este lenguaje. De modo similar al periodo histórico, están surgiendo alrededor de este lenguaje verdaderos &lt;em&gt;hombres del renacimiento&lt;/em&gt; que combinan disciplinas tales como Matemáticas, Filosofía y Ciencias &lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;. Una auténtica ágora virtual de pensadores alrededor de la programación abstracta que no debería perderse nadie interesado en estos&amp;nbsp;temas.&lt;/p&gt;
&lt;p&gt;La verdad es que la vejez de haskell se nota en algunos problemas de dependencias entre módulos y la carencia de herramientas de desarrollo modernas. Se está trabajando mucho en hacer de haskell una herramienta con suficiente &lt;em&gt;&amp;#8220;calidad industrial&amp;#8221;&lt;/em&gt; como para ser alternativa empresarial a cualquier otro lenguaje de programación &lt;sup id="fnref:2"&gt;&lt;a class="footnote-ref" href="#fn:2" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;Aún con todo, sigo programando en &lt;a href="http://scala-lang.org/"&gt;scala&lt;/a&gt;. Es el lenguaje con el que me siento más cómodo. Este último año ha estado marcado por la popularización del &lt;abbr title="compilador código fuente a código fuente"&gt;transpiler&lt;/abbr&gt; &lt;a href="http://www.scala-js.org/"&gt;scala.js&lt;/a&gt; para javascript, algo que está atrayendo más desarrolladores a scala que su contraparte para &lt;abbr title="Java Virtual Machine"&gt;&lt;span class="caps"&gt;JVM&lt;/span&gt;&lt;/abbr&gt;. Tengo intención de realizar algunos desarrollos para Angular o React con scala.js y pronto podré contar algunas cosas&amp;nbsp;más.&lt;/p&gt;
&lt;p&gt;También este último año he estado usando bastante &lt;a href="https://github.com/alexarchambault/jupyter-scala"&gt;jupyter-scala&lt;/a&gt;, un kernel scala para el &lt;a href="http://jupyter.org/"&gt;jupyter-notebook&lt;/a&gt;, para la realización de diversos ejercicios de bioinformática. Toda una gozada de usar y, sobre todo, de tener documentados todos los pasos que iba dando. Si os interesa la bioinformática, os recomiendo la serie &lt;span class="caps"&gt;MOOC&lt;/span&gt; sobre &lt;a href="https://www.coursera.org/specializations/bioinformatics"&gt;bioinformática&lt;/a&gt; de la UCSanDiego, unos cursos prácticos donde se combina la algorítmica con los distintos descubrimientos que se han ido produciendo en biología genética. &lt;em&gt;Clases magistrales de hacking del bueno&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Pero si hay algo que me sigue entusiasmando de scala es la gran cantidad de avances técnicos que tiene. El compilador de scala es, en mi opinión, uno de los mejores que existe. Innovaciones como &lt;em&gt;&amp;#8220;macros&amp;#8221;&lt;/em&gt;, programación genérica con &lt;a href="http://typelevel.org/"&gt;shapeless&lt;/a&gt;, las &lt;a href="http://akka.io/"&gt;akka-streams&lt;/a&gt; para microservicios o la reciente &lt;a href="http://rapture.io/"&gt;rapture.io&lt;/a&gt;, con una &lt;span class="caps"&gt;API&lt;/span&gt; magistralmente diseñada, da idea del dinamismo que tiene este lenguaje. Algo que cuesta ver en otros&amp;nbsp;lenguajes.&lt;/p&gt;
&lt;p&gt;En fin. Espero poner en claro mucho de lo dicho aquí. También espero que mis nuevas entradas en el blog sean más frecuente. Hasta&amp;nbsp;pronto.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;Sin menoscabo de otras expresiones artísticas como &lt;a href="http://haskell.cs.yale.edu/?post_type=publication&amp;amp;p=112"&gt;The Haskell School of Music&lt;/a&gt;.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:2"&gt;
&lt;p&gt;Una de la empresas que más está dinamizando haskell es &lt;a href="https://www.fpcomplete.com/"&gt;FPComplete&lt;/a&gt;, introduciendo haskell en los desarrollos para las grandes empresas.&amp;#160;&lt;a class="footnote-backref" href="#fnref:2" rev="footnote" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="python"></category><category term="haskell"></category><category term="scala"></category></entry><entry><title>Nuevos planteamientos, nueva etapa</title><link href="https://blog.ch3m4.org/2013/10/07/nuevos-planteamientos-nueva-etapa/" rel="alternate"></link><published>2013-10-07T14:45:00+02:00</published><updated>2013-10-07T14:45:00+02:00</updated><author><name>Chema Cortés</name></author><id>tag:blog.ch3m4.org,2013-10-07:/2013/10/07/nuevos-planteamientos-nueva-etapa/</id><summary type="html">&lt;p&gt;Si me sigues por twitter, sabrás que he cambiado de trabajo. Aunque sigo
siendo &amp;#8220;informático&amp;#8221; a todos los efectos, para mi &amp;#8220;core&amp;#8221; interno ha
supuesto un cambio radical de trabajo. Mi labor actual está orientada
más a temas de diseño y gestión de sistemas y telecomunicaciones, lo que
relega las …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Si me sigues por twitter, sabrás que he cambiado de trabajo. Aunque sigo
siendo &amp;#8220;informático&amp;#8221; a todos los efectos, para mi &amp;#8220;core&amp;#8221; interno ha
supuesto un cambio radical de trabajo. Mi labor actual está orientada
más a temas de diseño y gestión de sistemas y telecomunicaciones, lo que
relega las tareas de programación a un nivel&amp;nbsp;secundario.&lt;/p&gt;
&lt;p&gt;No espero que este cambio me suponga abandonar el estudio de nuevos
conceptos y metodologías de la programación, como hacía hasta ahora. Tal
vez, sí que suponga que en este blog incluya temas de gestión de
sistemas que hasta ahora no incluía, aunque todavía no tengo claro en
qué medida puedo aportar algo que sea original en esta&amp;nbsp;temática.&lt;/p&gt;
&lt;p&gt;Lo que sí que me estoy planteando reducir la programación en python. No
es por ningún motivo especial, si no por el deseo de explorar otros
mundos como son la programación reactiva con scala y el análisis de
datos con R. No tener que programar en el trabajo supone una liberación
para hacer este viaje, casi como si me hubieran concedido un periodo&amp;nbsp;sabático.&lt;/p&gt;
&lt;p&gt;Aún tengo en el cajón varios artículos sobre python que iré publicando
progresivametne, y pienso seguir cualquier novedad que surga. Lo que
quizás se note más sea que bajaré mi actividad (que no desaparición) en
los distintos foros python. Posiblemente, haya muchos que ni se den&amp;nbsp;cuenta.&lt;/p&gt;</content></entry><entry><title>Balance y cierre de ejercicio</title><link href="https://blog.ch3m4.org/2013/06/22/balance-y-cierre-de-ejercicio/" rel="alternate"></link><published>2013-06-22T14:51:00+02:00</published><updated>2013-06-22T14:51:00+02:00</updated><author><name>Chema Cortés</name></author><id>tag:blog.ch3m4.org,2013-06-22:/2013/06/22/balance-y-cierre-de-ejercicio/</id><summary type="html">&lt;p&gt;Ya sé que parece extraño cerrar un periodo en mitad de año, pero los que me siguen de aquí a unos años sabrán que suelo hacer un breve resumen de situación comentando qué he estado haciendo y qué proyectos futuros estoy&amp;nbsp;ideando.&lt;/p&gt;
&lt;p&gt;Como puse en el último &lt;em&gt;twitt&lt;/em&gt;, parece que …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Ya sé que parece extraño cerrar un periodo en mitad de año, pero los que me siguen de aquí a unos años sabrán que suelo hacer un breve resumen de situación comentando qué he estado haciendo y qué proyectos futuros estoy&amp;nbsp;ideando.&lt;/p&gt;
&lt;p&gt;Como puse en el último &lt;em&gt;twitt&lt;/em&gt;, parece que voy a cambiar de trabajo. Después de 20 años dedicados a la sanidad pública, pasaré a trabajar para la gestión informática de la educación pública. Ya sé que son dos de los sectores públicos más castigados por los recortes presupuestarios, pero al menos queda algo, no como en el resto de&amp;nbsp;departamentos.&lt;/p&gt;
&lt;p&gt;Lo primero de todo es volver a afirmar una vez más que &lt;strong&gt;no voy a dejar python&lt;/strong&gt;. Agradezco los mensajes de ánimo para que continúe participando en la comunidad hispana de python, incluso alguna que otra oferta para trabajar en proyectos punteros. No voy a abandonar python, tan sólo se me ha quedado pequeño. Ahora cierro el año que me dí para hacerme experto programador en scala y este año que viene haré lo propio con&amp;nbsp;R.&lt;/p&gt;
&lt;p&gt;Hace varios años que no programaba nada en python para el trabajo. En realidad, mi labor ha consistido en mantener y terminar proyectos que dejaban inconclusos las empresas externas que iban quebrando y que dejaban todo sin documentar y sin metodología alguna. Ha sido mucho código &lt;em&gt;&amp;#8220;desestructurado&amp;#8221;&lt;/em&gt; el que he tenido que leer y entender. Lo peor es que la actual situación económica de la administración pública no permite configurar un equipo de desarrolladores capaces de abarcar estos proyectos y, peor áun, si algún día salimos de la crisis y la administración pública vuelve a disponer de medios económicos, en primer lugar no habrá gente capacitada (habrán huido del pais si son inteligentes). Lo segundo, los dirigentes políticos no confían en sus funcionarios y optan por sacar estas funciones del control público a empresas externas que puedan manipular y de las que puedan beneficiarse en&amp;nbsp;exclusiva.&lt;/p&gt;
&lt;p&gt;Porque hay que decirlo bien claro: &lt;strong&gt;los datos de la administración pública deben ser públicos&lt;/strong&gt;. No valen excusas para no publicar las listas de esperas de sanidad, ni saber cuántos contratos se hacen al mes, ni cuánto se cobran de dietas,&amp;#8230; Como informáticos, conocemos que toda esta información se está introduciendo al día en el sistema, casi en tiempo real. El gran problema es que un político no cree en los datos, sólo cree en aquello que confirme lo que cree. Como leí hace poco en un libro&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;: &amp;#8220;El propósito último del &lt;em&gt;análisis de datos&lt;/em&gt; es convencer a otras personas que sus creencias pueden ser alteradas por los datos&amp;#8221;. Y creo que es aquí donde los informáticos somos más temidos. Nos niegan ser parte de las juntas de dirección porque nuestros razonamientos se basarían en datos reales gracias a nuestro conocimiento integral de la estructura de la empresa. Somos demasiado poco manipulables para ser&amp;nbsp;directivos.&lt;/p&gt;
&lt;p&gt;Hay que exigir que la administración pública abra sus datos. Son de agradecer los primeros esfuerzos en &lt;em&gt;opendata&lt;/em&gt; que realizan algunos gobiernos autonómicos; pero son datos muy escasos y limitados, casi ridículos en comparación con la cantidad total de datos que gestiona. Debería exigirse, por ley, que toda empresa que trabaje para la administración pública publique sus datos. Ya no sólo porque los ciudadanos queramos saber más, si no porque el dinero público debe beneficiar a todos, incluso a las empresas que no conseguieron el contrato y que quieran&amp;nbsp;mejorar.&lt;/p&gt;
&lt;p&gt;Padezco de cierto Síndrome de Casandra, pero si me preguntaran cómo pienso que será el futuro, imagino en un mundo inhundado de datos abiertos. La huella que dejaron generaciones pasadas en este océano de datos serían la base con la que investigadores del presente harían nuevos descubrimientos médicos y científicos. Datos que contradigan la manipulación del presente por políticos y multinacionales. En definitiva, un quinto poder para una Democracia más&amp;nbsp;justa.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;&lt;span class="dquo"&gt;&amp;#8220;&lt;/span&gt;Doing Bayesian Data Analysis&amp;#8221; por John K. Kruschke&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content></entry><entry><title>Scala vs. Python vs. Lua</title><link href="https://blog.ch3m4.org/2013/04/09/scala-vs-python-vs-lua/" rel="alternate"></link><published>2013-04-09T20:55:00+02:00</published><updated>2013-04-09T20:55:00+02:00</updated><author><name>Chema Cortés</name></author><id>tag:blog.ch3m4.org,2013-04-09:/2013/04/09/scala-vs-python-vs-lua/</id><summary type="html">&lt;p&gt;Hace bastante tiempo que ando comentando cosas de estos tres lenguajes: Scala, Python y Lua. Hasta el momento no he hecho una comparativa entre ellos y creo que es el momento de hacerlo, siempre desde el punto de vista de un programador. Más que llegar a la conclusión de cuál …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Hace bastante tiempo que ando comentando cosas de estos tres lenguajes: Scala, Python y Lua. Hasta el momento no he hecho una comparativa entre ellos y creo que es el momento de hacerlo, siempre desde el punto de vista de un programador. Más que llegar a la conclusión de cuál es mejor o peor, quisiera dar una idea de porqué los recomiendo, a los tres, sin decantarme por sólo uno de ellos. Si buscabas razones para quedarte con uno de ellos, tampoco deberías desestimar otros similares como Ruby, Groovy, Haskel, Clojure o Erlang. De todos hay cosas qué&amp;nbsp;aprender.&lt;/p&gt;
&lt;h2&gt;Python&lt;/h2&gt;
&lt;p&gt;Quizás Python sea el lenguaje más asequible para un programador que empieza o que busca un segundo lenguaje. Su aprendizaje es sencillo, mientras que su potencia y ubicuidad lo hace ideal desde los pequeños scripts que podamos necesitar en nuestro día a día, hasta escalar a servidores empresariales de tipo&amp;nbsp;medio.&lt;/p&gt;
&lt;p&gt;Puede que a muchos disguste python por su identación forzada o por su particular modelo de datos, por citar dos de las características más criticadas. Sin embargo, confía en mí si te digo que python es uno de los mayores compendios de sabiduría que puedes tener al alcance de tus manos. Cualquier cosa que creas extraña o fuera de lugar, seguramente tenga su buena explicación. El sistema colaborativo que hace evolucionar a python (conocido como &lt;span class="caps"&gt;PEP&lt;/span&gt;-&lt;em&gt;Python Enhancement Proposals&lt;/em&gt;) consigue que todo el saber de la comunidad python termine decantándose hace un modelo de evolución del lenguaje que lo hace único, con el que mejora calmadamente con cada versión. Operaciones con números grandes, algoritmo &lt;span class="caps"&gt;MRO&lt;/span&gt; para herencia múltiple, estructuras de datos optimizadas (heapq, deque,&amp;#8230;), ordenaciones por clave, operaciones sobre secuencias (sum, any, all,&amp;#8230;)&amp;#8230; son sólo algunos ejemplos de optimizaciones que el usuario usa sin ser realmente consciente de la cantidad de trabajo que le está ahorrando. En python casi siempre hay una forma de hacer las cosas correctamente, y además suele ser la&amp;nbsp;mejor.&lt;/p&gt;
&lt;h2&gt;Lua&lt;/h2&gt;
&lt;p&gt;Desde mi punto de vista, considero Lua como un &lt;em&gt;python minimalista&lt;/em&gt;. Sin objetos, sin posibilidad de construir tus propios tipos de datos, pero se apaña con un sólo tipo de estrutura &lt;code&gt;table&lt;/code&gt; para montar un sistema de herencia y emular algunos tipos de datos. Si lenguajes como python te parece complicados, no comprendes conceptos como la herencia, la creación de tipos o para qué sirven las metaclases, la simplicidad de lua hará que entiendas mejor estos&amp;nbsp;conceptos.&lt;/p&gt;
&lt;p&gt;El reducido tamaño del intérprete de Lua lo hace apropiado para ser empotrado en otras aplicaciones. Lo tenemos en gestores de paquetes (&lt;span class="caps"&gt;RPM&lt;/span&gt;), bases de datos (mysql-lua), e IDEs (Scite), aunque quizás sea más famoso por ser el motor de script de juegos como &lt;em&gt;World of Warcraft&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;En cuanto a sintáxis, también goza de un minimalismo que, a veces, desearías tuviera python. Posee cierta relajación en la llamada a funciones que permite usarlo para crear DSLs (&lt;em&gt;Lenguajes Específicos del Dominio&lt;/em&gt;), aunque quizás su mejor uso sea como lenguaje de descripción de datos en sustitución de xml, yaml o ficheros&amp;nbsp;ini.&lt;/p&gt;
&lt;h2&gt;Scala&lt;/h2&gt;
&lt;p&gt;Reconozco que soy un ferviente partidario de la &lt;em&gt;Programación Funcional&lt;/em&gt;. Python tiene algún aspecto de este paradigma, pero cada vez parece más diluido dentro del sistema de Clases Abstractas (&lt;code&gt;ABC&lt;/code&gt;-Abstract Base Classes) que empiezan a generalizarse en python. La estrategia de python es optimizar el uso de estas clases abstractas, independientemente de las clases que deriven luego de ellas. Aunque es un buen enfoque de optimización, siempre estará limitado a tiempo de&amp;nbsp;ejecución.&lt;/p&gt;
&lt;p&gt;Scala posee un potente sistema de tipado estático de datos que posibilita la inferencia del tipo de una operación, lo que permite cierta relajación en el tipado que lo hace muy similar al tipado dinámico. Pero la posibilidad de crear nuevos tipos, ya no sólo de objetos, si no también a partir de funciones o de &lt;em&gt;patrones de código&lt;/em&gt;, consigue interfaces más robustos y que sea el compilador quien optimize el código, antes de su&amp;nbsp;ejecución.&lt;/p&gt;
&lt;p&gt;Así que tenemos que scala es funcional, con un potente sistema de tipos y, además, 100% compatible con Java. ¿Se puede pedir algo&amp;nbsp;más?&lt;/p&gt;
&lt;p&gt;Pues sí. Incorpora el llamado modelo &lt;em&gt;Actor&lt;/em&gt; para programación concurrente. Con los actores, en lugar de compartir un espacio común de memoria entre los distintos procesos concurrentes, se establece un sistema de mensajes que son enviados y recibidos. Este modelo se ha mostrado bastante eficaz en sistemas de alta demanda como son algunas webs como twitter o&amp;nbsp;linkedin.&lt;/p&gt;
&lt;p&gt;En cuanto a la sintáxis, scala también posee algunas normas relajadas para la creación de DSLs muy similar a lo que se ve en Groovy. Algunos lenguajes &lt;span class="caps"&gt;DSL&lt;/span&gt; se usan en &lt;em&gt;frameworks&lt;/em&gt; de creación webs, como Play2, o para crear conjuntos de pruebas&amp;nbsp;(ScalaUnit).&lt;/p&gt;
&lt;h2&gt;Conclusión&lt;/h2&gt;
&lt;p&gt;Espero que te haya convencido para que eches un vistazo a algunos de estos lenguajes, aunque los tres sean altamente recomendables. Si tuviera que resumir en pocas líneas lo dicho hasta ahora, sería&amp;nbsp;así:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Python: navaja suiza de los lenguajes. Sirve para todo y está presente en cualquier sitio. Es un compendio de sabiduría para hacer las cosas de la mejor forma, aún sin&amp;nbsp;proponértelo.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Lua: lenguaje minimalista. Ayuda a comprender mejor algunos conceptos de programación. Es el lenguaje que me gustaría que tuviera todo navegador en lugar de&amp;nbsp;javascript.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Scala: funcional y con potente sistema de tipos. Su implementación del modelo actor lo hace idóneo para la creación de sistemas de alta demanda de&amp;nbsp;accesos.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="python"></category><category term="scala"></category><category term="lua"></category><category term="programming-languages"></category></entry><entry><title>De Generaciones Perdidas</title><link href="https://blog.ch3m4.org/2013/03/31/de-generaciones-perdidas/" rel="alternate"></link><published>2013-03-31T15:15:00+02:00</published><updated>2013-03-31T15:15:00+02:00</updated><author><name>Chema Cortés</name></author><id>tag:blog.ch3m4.org,2013-03-31:/2013/03/31/de-generaciones-perdidas/</id><summary type="html">&lt;p&gt;Allá por los 80, en Zaragoza, cuando internet era tan sólo la &lt;code&gt;i&lt;/code&gt; del
protocolo &lt;span class="caps"&gt;TCP&lt;/span&gt;/&lt;span class="caps"&gt;IP&lt;/span&gt; y los meros mortales se apañaban con sus modems para
acceder a alguna &lt;span class="caps"&gt;BBS&lt;/span&gt; local, y donde la única autopista de la información
consistía en una cinta semanal de 200 &lt;span class="caps"&gt;MB&lt;/span&gt;. que llegaba …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Allá por los 80, en Zaragoza, cuando internet era tan sólo la &lt;code&gt;i&lt;/code&gt; del
protocolo &lt;span class="caps"&gt;TCP&lt;/span&gt;/&lt;span class="caps"&gt;IP&lt;/span&gt; y los meros mortales se apañaban con sus modems para
acceder a alguna &lt;span class="caps"&gt;BBS&lt;/span&gt; local, y donde la única autopista de la información
consistía en una cinta semanal de 200 &lt;span class="caps"&gt;MB&lt;/span&gt;. que llegaba desde el &lt;span class="caps"&gt;CERN&lt;/span&gt; de
Ginebra, existía un grupo de &lt;em&gt;hackers&lt;/em&gt;, en el buen sentido de la
palabra&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;, que abarrotaban las pocas salas de informática que tenía
la Universidad de Zaragoza. No existían enseñanza de informática y los
conocimientos erán compartidos entre todos sin&amp;nbsp;reservas.&lt;/p&gt;
&lt;p&gt;Fue una época convulsa, presagio de los cambios que iban a venir y que
lo cambiarían todo. Luchas por el espacio cybernético, espionaje y
contraespionaje, virus y antivirus,&amp;#8230;un mundo cruel que quedó atrás y
que originó una &amp;#8220;generación perdida&amp;#8221;, una de tantas, pero de un nivel
tecnológico sin paragón que hizo puntera a Zaragoza y de la que muy
pocos tienen siquiera una mínima noción de su&amp;nbsp;existencia.&lt;/p&gt;
&lt;p&gt;A veces me he preguntado si valdría la pena dar a conocer a esta
generación y todo lo que hicieron. Pero sus integrantes, una vez
rehechas sus vidas ajenas a la universidad, incluso dejando sus estudios
en la cuneta, callan y no parece que deseen que se hable del tema. No
esperes que yo lo haga aquí, pero si quieres una pequeña muestra de lo
que pasó existe una serie de historias contadas en el libro &lt;em&gt;&amp;#8220;Sueños
Electrónicos. Emprendedores en la Red&amp;#8221;&lt;/em&gt; de José Carlos Arnal (&lt;a href="http://www.casadellibro.com/libro-suenos-electronicos-emprendedores-en-la-red/9788483241172/817995"&gt;&lt;span class="caps"&gt;ISBN&lt;/span&gt;:9788483241172&lt;/a&gt;) que puede darte una buena idea, aunque incompleta.
Como se suele decir, &lt;em&gt;&amp;#8220;existen dos tipos de hackers: los buenos y los
famosos&amp;#8221;&lt;/em&gt;. Si a álguien le interesa el tema, que lea este libro, porque
de los buenos hackers nunca se&amp;nbsp;hablará.&lt;/p&gt;
&lt;p&gt;En este país nunca aprenderemos. Ya sea por guerras, conflictos
políticos o por la avarienta corrupción, seguimos quemando generaciones
en la gran pira de calamidades inevitables en la que se ha convertido la
historia de España. Sirva este artículo como callado homenaje a esta
&lt;em&gt;De-Generación Perdida&lt;/em&gt; junto con el que &lt;a href="http://qlio.blogspot.com.es/2012/01/jakers-finales-de-los-80s-en-zaragoza.html"&gt;escribió Gaudi en su bitácora&lt;/a&gt; hace ya un&amp;nbsp;año.  &lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;Extraer conocimientos a través de la tecnología.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content></entry><entry><title>Collage vs. Origami</title><link href="https://blog.ch3m4.org/2013/02/21/collage-vs-origami/" rel="alternate"></link><published>2013-02-21T22:09:00+01:00</published><updated>2013-02-21T22:09:00+01:00</updated><author><name>Chema Cortés</name></author><id>tag:blog.ch3m4.org,2013-02-21:/2013/02/21/collage-vs-origami/</id><summary type="html">&lt;p&gt;En mis años como programador he visto mucho código. Lo suficiente como para saber qué estilo tiene el programador que lo escribe, cuáles son sus vicios y cuáles son sus errores de&amp;nbsp;concepto.&lt;/p&gt;
&lt;p&gt;Nos resulta imposible definir conceptos como &lt;em&gt;&amp;#8220;elegancia&amp;#8221;&lt;/em&gt; o &lt;em&gt;&amp;#8220;claridad&amp;#8221;&lt;/em&gt; en un código. Son conceptos más afines a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En mis años como programador he visto mucho código. Lo suficiente como para saber qué estilo tiene el programador que lo escribe, cuáles son sus vicios y cuáles son sus errores de&amp;nbsp;concepto.&lt;/p&gt;
&lt;p&gt;Nos resulta imposible definir conceptos como &lt;em&gt;&amp;#8220;elegancia&amp;#8221;&lt;/em&gt; o &lt;em&gt;&amp;#8220;claridad&amp;#8221;&lt;/em&gt; en un código. Son conceptos más afines a la &lt;em&gt;Estética&lt;/em&gt; que a las &lt;em&gt;Ciencias de la Computación&lt;/em&gt;, siendo difíciles de medir objetivamente. Nunca serán parte de una metodología y, sin embargo, se consideran objetivos a alcanzar por todo programador que se&amp;nbsp;precie.&lt;/p&gt;
&lt;p&gt;En nuestra simpleza, necesitamos compartimentar todo lo que conocemos en grandes grupos: imperativo vs. dinámico, tipado estático vs. tipado dinámico, estructural vs. orientado a objeto, orientado a objeto vs. funcional,&amp;nbsp;&amp;#8230;&lt;/p&gt;
&lt;p&gt;En este mundo de &lt;em&gt;versus&lt;/em&gt;, podemos hacer una similitud de la programación de código con el versus &lt;em&gt;&amp;#8220;Collage vs. Origami&amp;#8221;&lt;/em&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Un &lt;strong&gt;código collage&lt;/strong&gt; sería un código construido como parches. Secciones de estructuras distintas, con controles que encajen todas las piezas. Todo pensado para que si una pieza no funciona, se &amp;#8220;arranca&amp;#8221; y se pone otra&amp;nbsp;encima.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Un &lt;strong&gt;código origami&lt;/strong&gt; sería un código que se pliega sobre sí mismo. Un código que te lleva desde un principio a un final por el camino más corto. Si algo no funciona, se vuelve atrás, se &amp;#8220;desdobla&amp;#8221; y se hace un doblez&amp;nbsp;nuevo.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Al igual que el origami, la creación de código requiere muchas veces pararse a pensar qué parte del código se complicó demasiado y actuar sobre esa parte. Si no se entiende bien, una repetición consistente en teclear decenas de veces ese código ayuda a entender mejor lo que hace y el motivo que hacía que fuera tan complicado. Es muy similar a repetir los mismos dobleces de una figura de papel hasta lograr su doblado&amp;nbsp;perfecto. &lt;/p&gt;
&lt;p&gt;Como parte de tribunales de selección para puestos informáticos, me he sentido muchas veces molesto por tener que redactar tediosos cuestionarios de preguntas técnicas que nada valoraban la capacidad real del candidato para el futuro trabajo que iba a realizar. El objeto era realizar una fuerte criba entre los candidatos y, sobre todo, ordenarlos por puntos para hacer más sencilla su selección&amp;nbsp;posterior.&lt;/p&gt;
&lt;p&gt;Pero era en la posterior prueba práctica donde mejor podía apreciar la valía de un candidato. Una visión del código fuente y la documentación asociada permitía apreciar claramente quiénes eran los adecuados para el puesto. Pero ¿cómo valorar con una puntuación esta&amp;nbsp;percepción?&lt;/p&gt;
&lt;p&gt;Puede que para la próxima vez empiece por pedir al candidato que doble el papel de los enunciados de la prueba. Seguramente consiga saber más de él que de las respuestas que pueda&amp;nbsp;darme.&lt;/p&gt;</content></entry><entry><title>Estado de situación</title><link href="https://blog.ch3m4.org/2013/02/19/estado-de-situacion/" rel="alternate"></link><published>2013-02-19T21:39:00+01:00</published><updated>2013-02-19T21:39:00+01:00</updated><author><name>Chema Cortés</name></author><id>tag:blog.ch3m4.org,2013-02-19:/2013/02/19/estado-de-situacion/</id><summary type="html">&lt;p&gt;Hacía mucho que no actualizaba mi blog y creo que ya es momento de contar algunas cosillas. Me gustaría no tener que hablar de la crisis por la que estamos pasando, al menos en España, pero resulta imposible abstraerse de su&amp;nbsp;influencia.&lt;/p&gt;
&lt;p&gt;En mi trabajo como informático en una administración …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Hacía mucho que no actualizaba mi blog y creo que ya es momento de contar algunas cosillas. Me gustaría no tener que hablar de la crisis por la que estamos pasando, al menos en España, pero resulta imposible abstraerse de su&amp;nbsp;influencia.&lt;/p&gt;
&lt;p&gt;En mi trabajo como informático en una administración pública, soy testigo de cómo se están aplicando medidas de austeridad sin contramedidas que eviten el colapso del sistema. Sin duda alguna, el objetivo de estas medidas no puede ser otro que liquidar el sistema público para su sustitución por otro basado en el libre mercado, menos solidario y más&amp;nbsp;injusto.&lt;/p&gt;
&lt;p&gt;Pero no quiero hablar de la crisis en general. Hay otros muchos blogs que lo hacen mucho mejor que yo y con mayor profundidad. Solo quisiera hablar ahora de los cambios que estoy viviendo en mi entorno de&amp;nbsp;trabajo.&lt;/p&gt;
&lt;p&gt;Por un lado, todos aquellos proyectos innovadores en los que estaba implicado han sido cancelados o aminorados por los nuevos gestores. Como primera consecuencia de ello, han quedado sin uso todos mis programas hechos en python con los que extraía la información que necesitaba la dirección para la toma de decisiones (&lt;abbr title="&amp;quot;Management Information System&amp;quot; - &amp;quot;Sistema de información gerencial (SIG)&amp;quot;"&gt;&lt;span class="caps"&gt;MIS&lt;/span&gt;&lt;/abbr&gt;). Confío que algún día vuelva a interesar el &lt;em&gt;estado real&lt;/em&gt; de la administración donde trabajo, aunque sospecho que para entonces será demasiado&amp;nbsp;tarde.&lt;/p&gt;
&lt;p&gt;Se puede afirmar que ahora mismo ya no programo en python. Por si fuera poco, a ésto hay que añadir la cantidad de proyectos que se nos están quedando huérfanos por no poder renovar su mantenimiento o, simplemente, por quebrar y desaparecer las empresas que los llevaban. Todos estos proyectos están cayendo en mi bandeja de tareas pendientes, con lo que ahora he tenido que volver a programar en lenguajes que creía olvidados como Visual Basic, &lt;span class="caps"&gt;TSQL&lt;/span&gt; o &lt;span class="caps"&gt;PHP&lt;/span&gt;. Un gran paso atrás del que no veo que podamos salir en bastantes&amp;nbsp;años.&lt;/p&gt;
&lt;p&gt;Por este motivo, cuando un grupo de entusiastas programadores españoles de python unieron esfuerzos para crear una &lt;a href="http://www.es.pycon.org/" title="PyCon España"&gt;asociación&lt;/a&gt; con la que montar la primera &lt;a href="http://www.es.pycon.org/" title="PyCon España"&gt;&lt;strong&gt;PyCon&lt;/strong&gt; española&lt;/a&gt;, no he podido dejar de pensar lo lejos que estoy en estos momentos de considerarme &lt;em&gt;&amp;#8220;programador python&amp;#8221;&lt;/em&gt;. Se me incluyó en un principio entre los &lt;em&gt;&amp;#8220;socios fundadores&amp;#8221;&lt;/em&gt; de la asociación, supongo que debido a mi labor en la lista de &lt;a href="http://mail.python.org/mailman/listinfo/python-es"&gt;python-es&lt;/a&gt; todos estos años. Pero pienso que un socio fundador debe ser una especie de socio &lt;em&gt;&amp;#8220;compromisario&amp;#8221;&lt;/em&gt; que trabaje duro para hacer viable la asociación, sobre todo en sus inicios más difíciles. En estos momentos, no me veo capaz de algo así, ni siquiera de mostrar el más mínimo entusiasmo. Por éso mismo, he preferido declinar el ofrecimiento y figurar como un socio más, a pesar de haber podido disgustar a más de&amp;nbsp;uno.&lt;/p&gt;
&lt;p&gt;Como puntilla a lo dicho, últimamente estoy dedicando todo mi tiempo disponible al estudio del lenguaje &lt;a href="http://www.scala-lang.org/"&gt;scala&lt;/a&gt;. Además de reconciliarme con la programación funcional, me ha hecho férreo defensor del tipado estático frente al tipado dinámico que usa python. No quiero decir de ninguna manera que abandone python, pero preveo que este año lo dedicaré a convertirme en experto programador de scala. Definitivamente, no encajo preparando la PyCon. Mis disculpas por&amp;nbsp;ello.&lt;/p&gt;</content><category term="PyConES"></category></entry><entry><title>Lingua Franca</title><link href="https://blog.ch3m4.org/2012/05/12/lingua-franca/" rel="alternate"></link><published>2012-05-12T17:11:00+02:00</published><updated>2012-05-12T17:11:00+02:00</updated><author><name>Chema Cortés</name></author><id>tag:blog.ch3m4.org,2012-05-12:/2012/05/12/lingua-franca/</id><summary type="html">&lt;p&gt;Este mes de mayo, el conocido y muchas veces criticado &lt;a href="http://www.tiobe.com/index.php/content/paperinfo/tpci/index.html" title="TIOBE Programming Community Index"&gt;índice tiobe&lt;/a&gt; comenta que, tras 8 años, las posiciones en este índice de los lenguajes de programación no han sufrido demasiado altibajos, con excepciones notables como el &lt;em&gt;&amp;#8220;Objective C&amp;#8221;&lt;/em&gt; empleado por el &lt;em&gt;ecosistema Apple&lt;/em&gt; (&lt;em&gt;iPhone/iPad/MacOS&lt;/em&gt;).  Achaca esta inmovilidad …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Este mes de mayo, el conocido y muchas veces criticado &lt;a href="http://www.tiobe.com/index.php/content/paperinfo/tpci/index.html" title="TIOBE Programming Community Index"&gt;índice tiobe&lt;/a&gt; comenta que, tras 8 años, las posiciones en este índice de los lenguajes de programación no han sufrido demasiado altibajos, con excepciones notables como el &lt;em&gt;&amp;#8220;Objective C&amp;#8221;&lt;/em&gt; empleado por el &lt;em&gt;ecosistema Apple&lt;/em&gt; (&lt;em&gt;iPhone/iPad/MacOS&lt;/em&gt;).  Achaca esta inmovilidad a lo costoso de trasladar todo el código base que hemos acumulado de un lenguaje a otro, optando por mantenerse fiel a lenguaje que está&amp;nbsp;utilizando.&lt;/p&gt;
&lt;p&gt;Desde mi punto de vista, ésta no es una razón de peso hoy en día. Los distintos lenguajes de programación pueden compartir librerías sin demasiados problemas. Tecnologías como &lt;code&gt;.Net&lt;/code&gt; o &lt;code&gt;JVM&lt;/code&gt; facilitan bastante esta tarea, de modo que la mezcla de lenguajes es posible, sin obligar a elegir un único lenguaje al inicio de un&amp;nbsp;desarrollo.&lt;/p&gt;
&lt;p&gt;Pienso, por ejemplo, en todos los lenguajes de programación existentes para &lt;span class="caps"&gt;JVM&lt;/span&gt; (groovy, scala, clojure, jython, jruby,&amp;#8230;). Todos ellos pueden usar las mismas librerías que usa java, aportando a su vez opciones con las que no cuenta java. Tal vez en esa proliferación de lenguajes alternativos se encuentre la explicación de porqué java ha perdido posiciones con respecto a C++. La evolución de Java se ha quedado algo estancada, tardando demasiado en incorporar características tan demandadas como las &lt;em&gt;&amp;#8220;clausuras&amp;#8221;&lt;/em&gt; o &lt;em&gt;tipos dinámicos&lt;/em&gt; que ofrecen los otros lenguajes.&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;Porque es la evolución de los lenguajes de programación lo que realmente es interesante. No hace muchos años, creo que en la revista DrDobb&amp;#8217;s, existía una sección fija dedicada al &lt;em&gt;&amp;#8220;lenguaje exótico del mes&amp;#8221;&lt;/em&gt; que pretendía mostrar lenguajes más expresivos, muchos de dominio específico orientados a resolver problemas concretos, pero donde a veces se veían pequeñas joyas como el &lt;span class="caps"&gt;APL&lt;/span&gt;. Los lenguajes de uso habitual se consideraban limitados, y muchas veces la evolución en los algoritmos fallaba en el preciso momento de tener que codificarlo en un programa de ordenador. El lenguaje máquina dejó paso a otros modo de entenderse con la&amp;nbsp;máquina.&lt;/p&gt;
&lt;p&gt;Con el tiempo, cuando la programación se convirtió en ciencia, aparecieron los &lt;strong&gt;&amp;#8220;paradigmas&amp;#8221;&lt;/strong&gt; y las &lt;strong&gt;&amp;#8220;metodologías&amp;#8221;&lt;/strong&gt;. La programación se volvió bastante más abstracta y la ingeniería impuso sus reglas de eficiencia que terminó por relegar los lenguajes de programación a un segundo plano. La &lt;em&gt;&amp;#8220;expresividad&amp;#8221;&lt;/em&gt; se conseguía ahora mediante herramientas &lt;span class="caps"&gt;CASE&lt;/span&gt; e IDEs inteligentes que imponían sus lenguajes de&amp;nbsp;programación.&lt;/p&gt;
&lt;p&gt;Estamos en una época que poco va a cambiar en cuanto a lenguajes, tal como afirma &lt;a href="http://www.tiobe.com/index.php/content/paperinfo/tpci/index.html" title="TIOBE Programming Community Index"&gt;Tiobe&lt;/a&gt;. La razón de peso son las herramientas que usamos, que no las librerías. Los lenguajes más populares (los que aparecen en el índice tiobe) poseen un proceso evolutivo por el que adaptan los aciertos de los otros y se desprenden de lo obsoleto. No aumenta el número de lenguajes, pero las versiones de los lenguajes aumentan sin parar. Una estrategia evolutiva en el más amplio sentido que hace que los lenguajes se parezcan cada vez más entre sí, con formas muy similares para resolver los mismo problemas que llamamos &amp;#8220;patrones de diseño&amp;#8221; y concepciones&amp;nbsp;similares.&lt;/p&gt;
&lt;p&gt;¿El inicio de una &lt;em&gt;&amp;#8220;Lingua Franca&amp;#8221;&lt;/em&gt;?&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;En la literatura, se suele mencionar al lenguaje Scala como &amp;#8220;lo que debería haber sido la evolución de Java&amp;#8221;.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="CompSci"></category><category term="computing science"></category></entry><entry><title>Programación. ¿Ciencia o Ingeniería?</title><link href="https://blog.ch3m4.org/2012/03/09/programacion-ciencia-o-ingenieria-2/" rel="alternate"></link><published>2012-03-09T22:21:00+01:00</published><updated>2012-03-09T22:21:00+01:00</updated><author><name>Chema Cortés</name></author><id>tag:blog.ch3m4.org,2012-03-09:/2012/03/09/programacion-ciencia-o-ingenieria-2/</id><summary type="html">&lt;p&gt;Cuando inicié este blog, además de servir de soporte a algunos artículos técnicos sobre programación que fueran más o menos novedosos, también me movió la idea de aportar reflexiones sobre algunos temas &lt;em&gt;interdisciplinares&lt;/em&gt; que constantemente me hacía debido a mi formación científica y que he ido acumulando durante todos estos …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cuando inicié este blog, además de servir de soporte a algunos artículos técnicos sobre programación que fueran más o menos novedosos, también me movió la idea de aportar reflexiones sobre algunos temas &lt;em&gt;interdisciplinares&lt;/em&gt; que constantemente me hacía debido a mi formación científica y que he ido acumulando durante todos estos últimos años. Creo que es momento de empezar con&amp;nbsp;ellos&amp;#8230;&lt;/p&gt;
&lt;h2&gt;En busca de la materia&amp;nbsp;gris&lt;/h2&gt;
&lt;p&gt;Todavía persiste el mito de considerar que un informático es una especie de chamán que con unos cuantos pases mágicos delante de una pantalla es capaz de hacer que un ordenador tome vida. Muy pocos asumen que un informático pueda tener una formación científica o técnica seria que se encuentre al mismo nivel que un médico o un ingeniero. Y así nos van las&amp;nbsp;cosas.&lt;/p&gt;
&lt;p&gt;No tomarse en serio la formación de un informático está llevando a que muchas empresas del sector no valoren suficientemente la destreza de sus empleados. Asumen que siempre podrán encontrar nuevos empleados a los que poder darles una pequeña formación suficiente para encargarse de cualquier proyecto que tengan en marcha. Si supieran un mínimo de ingeniería, sabrían que siempre hay un límite en todo proyecto en el que añadiendo más recursos nunca se consigue acelerar el desarrollo, si no más bien lo contrario. Momentos de dificultad que desemboca en una crisis&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;, donde prima más la experiencia que la cantidad de manos&amp;nbsp;disponibles.&lt;/p&gt;
&lt;p&gt;La actual crisis económica ha venido a agravar más el panorama al minusvalorar aún más a los profesionales de informática. Los buenos profesionales optan por emigrar a otros países donde sean mejor considerados, mientras que aquí las empresas compiten bajando más y más los precios, sin tener en consideración ni la calidad ni la idoneidad del producto que&amp;nbsp;desarrollan.&lt;/p&gt;
&lt;p&gt;Estamos inmersos entre sistemas informáticos y de telecomunicaciones que se están colapsando debido a malos diseños y falta de mantenimiento, con usuarios que asumen por normal que un sistema pueda fallar, que los virus puedan entrar hasta las entrañas del ordenador, o que un &lt;em&gt;hacker&lt;/em&gt; pueda bloquear cualquier sistema gubernamental y robar identidades,&amp;#8230; y lo único que importa a los responsables es que alguna empresa sin escrúpulos asuma la culpa por el menor precio&amp;nbsp;posible.&lt;/p&gt;
&lt;h2&gt;El fin de la ley de&amp;nbsp;Moore&lt;/h2&gt;
&lt;p&gt;Es sabido que por la &lt;a href="http://es.wikipedia.org/wiki/Ley_de_moore" title="Ley de Moore"&gt;Ley de Moore&lt;/a&gt; en estos 50 años pasados, se estaba cumpliendo que cada dos años los ordenadores doblaban su velocidad, mientras se hacían cada vez más y más baratos. Como consecuencia, las aplicaciones mal diseñadas aún se podían sobrellevar gracias a la reducción de costes y mejoras de velocidad que ofrecían los nuevos&amp;nbsp;sistemas.&lt;/p&gt;
&lt;p&gt;Lamentablemente, la ley de Moore llega a su final. Se intenta prorrogar su vigencia metiendo más &lt;em&gt;cores&lt;/em&gt; en cada cpu, pero si bien se sigue contando con procesadores más baratos y más rápidos, un sistema multicore no es aprovechable por una aplicación mal diseñada. Para aprovechar una cpu multicore, se requiere de nuevas aplicaciones diseñadas específicamente para ellos. Hoy en día, muchos sistemas operativos sólo son capaces de aprovechar un core de todos los disponibles, lo que no deja de ser un engaño para el usuario que piensa que debería ir todo más rápido. Estamos muy cerca de una nueva crisis similar a la crisis del software, pero con hardware esta&amp;nbsp;vez.&lt;/p&gt;
&lt;p&gt;Es una burbuja que pronto va a estallar como tantas otras&amp;nbsp;antes.&lt;/p&gt;
&lt;h2&gt;Poner en valor al&amp;nbsp;programador&lt;/h2&gt;
&lt;p&gt;Hace tiempo que se perdió el significado de ser un &lt;strong&gt;&amp;#8220;programador&amp;#8221;&lt;/strong&gt;. Con ese nombre se ha pasado a denominar un puesto técnico de trabajo que está por debajo de analista y un poco por encima de reparador de hardware. Nada que tenga qué ver con un trabajo metodológico y, en cierta medida,&amp;nbsp;creativo.&lt;/p&gt;
&lt;p&gt;Y, sin embargo, contar con buenos programadores debería ser parte del activo de una empresa que la ponga en valor. No es entendible que haya empresas que busquen programadores después de haberse comprometido con un proyecto de desarrollo. Debería ser más bien al revés, que para conseguir un proyecto se haya valorado antes qué programadores dispone la empresa en&amp;nbsp;nómina. &lt;/p&gt;
&lt;p&gt;Puedo asegurar que hay alguna empresa que cuenta con un núcleo de buenos programadores, normalmente gente joven que montan su propia empresa, que nunca les falta trabajo. Pero son mucho más numerosas las empresas vacías que se dedican a quemar sistemáticamente a toda su plantilla en proyectos difíciles de asumir sin la gente y los medios&amp;nbsp;adecuados.&lt;/p&gt;
&lt;p&gt;Contar con programadores experimentados no es tarea fácil. Toda empresa debería asegurar a sus programadores más valiosos, nunca deberían considerarlos inferiores a analistas, ya que asumen roles distintos. Un buen programador puede ser un pésimo analista y viceversa. Un buen programador debería estar bien pagado simplemente como programador, y no verse presionado para ser analista si quiere ascender y cobrar&amp;nbsp;más.&lt;/p&gt;
&lt;h2&gt;Programación. ¿Ciencia o&amp;nbsp;Ingeniería?&lt;/h2&gt;
&lt;p&gt;Según donde busques, la programación es parte de la &lt;em&gt;Ciencia de la Computación&lt;/em&gt; o es parte de la &lt;em&gt;Ingeniería del Software&lt;/em&gt;. Personalmente, me inclino más por que sea una ciencia.  Un buen programador siempre intenta comprender el funcionamiento de un programa con el fin de crear nuevos y mejores programas. Usa un ciclo de análisis, desarrollo, prueba y refactorización que tanto se parece al &lt;em&gt;&amp;#8220;método científico&amp;#8221;&lt;/em&gt;, experimentando hipótesis hasta dar con una solución. La ingeniería entraría cuando se requiere que la aplicación se ajuste a determinados requisitos, donde a veces no importa tanto la optimización del programa como el que se ajuste su funcionamiento a los parámetros&amp;nbsp;requeridos.&lt;/p&gt;
&lt;p&gt;¿Es posible buscar la belleza entre líneas de código? ¿Evolucionamos hacia mejores lenguajes de&amp;nbsp;programación?&lt;/p&gt;
&lt;p&gt;Temas para próximos&amp;nbsp;artículos.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;véase &lt;a href="http://es.wikipedia.org/wiki/Crisis_del_software"&gt;Crisis del Software&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="science"></category><category term="engineering"></category><category term="programming"></category></entry><entry><title>Rentrée (nueva temporada)</title><link href="https://blog.ch3m4.org/2011/10/08/rentree-nueva-temporada/" rel="alternate"></link><published>2011-10-08T18:22:00+02:00</published><updated>2011-10-08T18:22:00+02:00</updated><author><name>Chema Cortés</name></author><id>tag:blog.ch3m4.org,2011-10-08:/2011/10/08/rentree-nueva-temporada/</id><summary type="html">&lt;p&gt;Desconectado de mis tareas habituales depués de algunas semanas viajando por Francia, veo que me quedaron varios proyectos y artículos en dique seco que pretendo recuperar. Con la &lt;em&gt;&amp;#8220;reentrada&amp;#8221;&lt;/em&gt; (o, como dirían los franceses, &lt;em&gt;&amp;#8220;rentrée&amp;#8221;&lt;/em&gt;) me he propuesto algunas metas para esta nueva &lt;em&gt;temporada&lt;/em&gt; (por llamarla de algún modo) que …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Desconectado de mis tareas habituales depués de algunas semanas viajando por Francia, veo que me quedaron varios proyectos y artículos en dique seco que pretendo recuperar. Con la &lt;em&gt;&amp;#8220;reentrada&amp;#8221;&lt;/em&gt; (o, como dirían los franceses, &lt;em&gt;&amp;#8220;rentrée&amp;#8221;&lt;/em&gt;) me he propuesto algunas metas para esta nueva &lt;em&gt;temporada&lt;/em&gt; (por llamarla de algún modo) que ahora&amp;nbsp;empiezo.&lt;/p&gt;
&lt;p&gt;Junto a los artículos que tengo previstos, intentaré incorporar al blog más comentarios sobre temas técnicos que me vayan surgiendo en el día a día, preferiblemente relacionados con la programación. Sin llegar a la extensión de un artículo, espero que sirvan como gérmen de desarrollos posteriores más&amp;nbsp;extensos.&lt;/p&gt;
&lt;p&gt;Como primeras ideas para esta &lt;em&gt;rentrée&lt;/em&gt;, he tomados dos decisiones: centrar mis desarrollos en la &lt;a href="http://es.wikipedia.org/wiki/Máquina_virtual_Java"&gt;máquina virtual java&lt;/a&gt; (plataforma &lt;abbr title="Java Virtual Machine"&gt;&lt;span class="caps"&gt;JVM&lt;/span&gt;&lt;/abbr&gt;) y aprender a programar con &lt;a href="http://www.scala-lang.org/" title="Lenguaje Scala"&gt;scala&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Máquina Virtual Java (&lt;abbr title="Java Virtual Machine"&gt;&lt;span class="caps"&gt;JVM&lt;/span&gt;&lt;/abbr&gt;)&lt;/h2&gt;
&lt;p&gt;Hoy en día, la &lt;abbr title="Java Virtual Machine"&gt;&lt;span class="caps"&gt;JVM&lt;/span&gt;&lt;/abbr&gt; está omnipresente para casi cualquier dispositivo y sistema operativo. Su uso empresarial es muy extendido, tanto para desarrollo en el lado servidor como para clientes móviles. Librerías y paquetes suficientemente robustos y probados completan una gran plataforma donde desarrollar cualquier tipo de aplicativo que podamos&amp;nbsp;pensar.&lt;/p&gt;
&lt;p&gt;Al evaluar la robustez de las librerías java, hay que tener en cuenta que java y su &lt;abbr title="Java Virtual Machine"&gt;&lt;span class="caps"&gt;JVM&lt;/span&gt;&lt;/abbr&gt; están en constante evolución. El paso de Java5 a Java6 sido muy lento debido a las pocas ventajas que ofrecía el cambio frente al coste de tener que adaptar el código; pero con Java7 se incorpora a la máquina virtual el poder trabajar con tipos dinámicos de datos, lo que mejorará bastante el rendimiento de los lenguajes de scripting como jython, jruby ó groovy, por poner algunos ejemplos. Este cambio parece independizar el desarrollo de la &lt;abbr title="Java Virtual Machine"&gt;&lt;span class="caps"&gt;JVM&lt;/span&gt;&lt;/abbr&gt; del lenguaje java para pasar a ser una plataforma común para la ejecución de aplicaciones, sea cual sea el lenguaje que se haya usado (objetivo similar a lo que tenía que haber sido&amp;nbsp;.Net).&lt;/p&gt;
&lt;p&gt;En lo personal, desde hace mucho tiempo que estoy programando en jython, tal como comenté en otro &lt;a href="https://blog.ch3m4.org/2011/05/30/porque-uso-jython/"&gt;artículo&lt;/a&gt;. La llegada de los dispositivos android hace aún más interesante la programación para &lt;abbr title="Java Virtual Machine"&gt;&lt;span class="caps"&gt;JVM&lt;/span&gt;&lt;/abbr&gt;, así como que las numerosas herramientas de software libre que estoy usando estén para esta plataforma. No quiero decir con ésto que renuncie a utilizar la CPython, la máquina virtual &lt;em&gt;&amp;#8220;nativa&amp;#8221;&lt;/em&gt; que lleva python, siempre que sea necesario. Tan sólo priorizo la plataforma, &lt;abbr title="Java Virtual Machine"&gt;&lt;span class="caps"&gt;JVM&lt;/span&gt;&lt;/abbr&gt;, frente a las últimas implementaciones del lenguaje python. Espero que el proyecto &lt;a href="http://pypy.org/"&gt;PyPy&lt;/a&gt; facilite un único camino para el desarrollo del lenguaje, independiente de la máquina virtual&amp;nbsp;empleada.&lt;/p&gt;
&lt;h2&gt;Lenguaje&amp;nbsp;Scala&lt;/h2&gt;
&lt;p&gt;Poco conozco de este lenguaje, la verdad. En el índice &lt;a href="http://www.tiobe.com/index.php/content/paperinfo/tpci/index.html" title="Índice Tiobe"&gt;tiobe&lt;/a&gt; de septiembre de 2011 figura en la posición 50, la última posición que entra en valoración. Pero los comentarios que he leído sobre este lenguaje me han picado tanto la curiosidad que he decidido darle un vistazo. Si quieres un consejo: no te limites a un sólo lenguaje de programación. Sólo comparando con otros lenguajes descubrirás las virtudes y limitaciones de los lenguajes que uses. Sobre todo, intenta aprender algún lenguaje &lt;em&gt;&amp;#8220;exótico&amp;#8221;&lt;/em&gt;, si por exótico se entiende aquél que no se ve en los estudios oficiales de informática. Siempre que te pidan mostrar tus conocimientos de programador, saber programar en un lenguaje &amp;#8220;exótico&amp;#8221; será visto como que te entusiasma la programación y que tienes capacidad para aprender cosas nuevas por tu cuenta (Python sigue siendo un excelente ejemplo de lenguaje para estas&amp;nbsp;demostraciones).&lt;/p&gt;
&lt;p&gt;Algunas características interesantes de&amp;nbsp;Scala:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Lenguaje funcional orientado a objeto similar a java, pero superando a éste en simplicidad. Incorpora clausuras y tipado perezoso de&amp;nbsp;datos.&lt;/li&gt;
&lt;li&gt;Escalable (como indica su nombre: &lt;strong&gt;sca&lt;/strong&gt;lable &lt;strong&gt;la&lt;/strong&gt;nguage)&lt;/li&gt;
&lt;li&gt;Emplea la &lt;abbr title="Java Virtual Machine"&gt;&lt;span class="caps"&gt;JVM&lt;/span&gt;&lt;/abbr&gt;, aunque también hay versión para .Net. Puede usarse en cualquier sitio que se use java como, por ejemplo, para programación en&amp;nbsp;android.&lt;/li&gt;
&lt;li&gt;Preparado para la programación concurrente. Sigue el modelo &amp;#8220;Actor&amp;#8221;, o lo que es lo mismo, todos los objetos son &amp;#8220;actores&amp;#8221; con su propio entorno de&amp;nbsp;ejecución.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Asociacionismo en torno a&amp;nbsp;python&lt;/h2&gt;
&lt;p&gt;Tangencialmente, he empezado a meterme en la organización de un evento relacionado con python. Creo importante que todos retomemos los contactos personales e intentar hacer reflotar las ilusiones perdidas por esta crisis que estamos viviendo. Si todo va bien, espero vernos en el &lt;a href="http://python-hispano.org/DiaPythonZGZ"&gt;Día Python 2011&lt;/a&gt; en Zaragoza dentro de la &lt;span class="caps"&gt;LSWC&lt;/span&gt;&amp;#8216;11.&lt;/p&gt;</content><category term="python"></category><category term="java"></category><category term="jvm"></category><category term="pyday"></category><category term="scala"></category></entry><entry><title>30 años no es nada o cómo soy como soy</title><link href="https://blog.ch3m4.org/2011/03/14/30-no-es-nada/" rel="alternate"></link><published>2011-03-14T21:47:00+01:00</published><updated>2011-03-14T21:47:00+01:00</updated><author><name>Chema Cortés</name></author><id>tag:blog.ch3m4.org,2011-03-14:/2011/03/14/30-no-es-nada/</id><summary type="html">&lt;p&gt;Estreno este blog con una pequeña reflexión: hace aproximadamente 30
años que escribí mi &lt;em&gt;primer programa&lt;/em&gt;. Y cuando digo escribir me refiero
al antiguo sistema de usar un bolígrafo y un papel, un simple ejercicio
en &lt;span class="caps"&gt;GWBASIC&lt;/span&gt; que nunca vi&amp;nbsp;ejecutarse.&lt;/p&gt;
&lt;p&gt;Fue en esa época cuando decidí que quería estudiar …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Estreno este blog con una pequeña reflexión: hace aproximadamente 30
años que escribí mi &lt;em&gt;primer programa&lt;/em&gt;. Y cuando digo escribir me refiero
al antiguo sistema de usar un bolígrafo y un papel, un simple ejercicio
en &lt;span class="caps"&gt;GWBASIC&lt;/span&gt; que nunca vi&amp;nbsp;ejecutarse.&lt;/p&gt;
&lt;p&gt;Fue en esa época cuando decidí que quería estudiar &lt;strong&gt;Ciencias Físicas&lt;/strong&gt;.
Con los años, me decepcionó el sistema universitario y las nulas
posibilidades para trabajar en investigación que ofrecía, tal como me
hubiera gustado. A cambio, terminé arrollado por completo por una
incipiente revolución que hoy es conocida por &lt;strong&gt;internet&lt;/strong&gt;: programación
en fortran, los primeros macintosh con sus interfaces gráficos, el
correo electrónico y las news, las primeras redes de conmutación de
paquetes, los primeros protocolos de transmisión de ficheros, el
&lt;span class="caps"&gt;CERN&lt;/span&gt;,&amp;#8230; Estos años he ido cambiado de lenguaje de programación, de
sistema operativo y, sobre todo, de equipo informático; en estos
momentos mis predilecciones van por hacer las cosas lo más simples
posible (&lt;a href="http://en.wikipedia.org/wiki/KISS_principle" title="KISS Principle"&gt;&lt;span class="caps"&gt;KISS&lt;/span&gt; principle&lt;/a&gt;),
donde el lenguaje python ha supuesto tanto la herramienta ideal para
conseguirlo, como una fuente de inspiración gracias a la gente que lo ha
hecho&amp;nbsp;posible.&lt;/p&gt;
&lt;p&gt;También fue en esa época cuando tuve una ruptura temporal con la
literatura de &lt;strong&gt;ciencia ficción&lt;/strong&gt; que tanto marcó mi juventud. Mis
estudios, así como la gran avalancha de textos que me llegaban sobre
computación y programación, me ocupaban todo el tiempo disponible. Ha
sido hace tan sólo unos años que he vuelto a recuperar el gusto por la
ciencia ficción, devorando muchos textos de autores contemporáneos del
género, principalmente norteamericanos, bastante más accesibles que
algunos españoles. No puede ser más desalentador ver, que en plena era
de las redes sociales y los libros electrónicos, los autores españoles
sigan estando más interesados en publicar sus libros en papel que en
conseguir más gente que &lt;em&gt;efectivamente&lt;/em&gt; lean sus libros y los&amp;nbsp;comente.&lt;/p&gt;
&lt;p&gt;En fin, estos serán, a grandes rasgos, los temas con los que voy a
rellenar mi blog. Tengo muchas cosas pendientes de escribir y nada claro
en qué orden irán saliendo. De momento te pediría paciencia hasta que se
vean más contenidos por aquí. Espero tus&amp;nbsp;comentarios.&lt;/p&gt;</content></entry></feed>